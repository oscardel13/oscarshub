name: Oscars Work CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Docker Login
      - run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      # Build Client and run test
      - run: docker build -t oscardel13/react-test -f ./client/dockerfile.dev ./client
      - run: docker run -e CI=true oscardel13/react-test npm test
      # Build Server and run test
      # - run: docker build -t oscardel13/server-test -f ./server/dockerfile.dev ./server
      # - run: docker run -e CI=true oscardel13/react-test npm test

      # Build Production Images
      - run: docker build -t oscardel13/oscarswork-client ./client
      - run: docker build -t oscardel13/oscarswork-nginx ./nginx
      - run: docker build -t oscardel13/oscarswork-server ./server
      # - run: docker build -t oscardel13/multi-worker-3-9 ./worker

      # Push Images to docker hub
      - run: docker push oscardel13/oscarswork-client
      - run: docker push oscardel13/oscarswork-nginx
      - run: docker push oscardel13/oscarswork-server 
      # - run: docker push oscardel13/multi-worker-3-9 l

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to EC2
      - run: ssh -i ${{ SSH_PRIVATE_KEY }} ${{ EC2_USERNAME }}@${{ EC2_HOSTNAME }}
      - run: echo "Hello Wold"
